{ "scope": "source.erlang", "completions": [
{ "trigger": "appmon", "contents": "appmon" },
{ "trigger": "process_info", "contents": "process_info" },
{ "trigger": "asn1ct", "contents": "asn1ct" },
{ "trigger": "ct", "contents": "ct" },
{ "trigger": "ct_master", "contents": "ct_master" },
{ "trigger": "ct_slave", "contents": "ct_slave" },
{ "trigger": "unix_telnet", "contents": "unix_telnet" },
{ "trigger": "vts", "contents": "vts" },
{ "trigger": "cerl", "contents": "cerl" },
{ "trigger": "compile", "contents": "compile" },
{ "trigger": "core_lib", "contents": "core_lib" },
{ "trigger": "erl_bifs", "contents": "erl_bifs" },
{ "trigger": "rec_env", "contents": "rec_env" },
{ "trigger": "crypto", "contents": "crypto" },
{ "trigger": "debugger", "contents": "debugger" },
{ "trigger": "i", "contents": "i" },
{ "trigger": "int", "contents": "int" },
{ "trigger": "dialyzer", "contents": "dialyzer" },
{ "trigger": "diameter", "contents": "diameter" },
{ "trigger": "edoc", "contents": "edoc" },
{ "trigger": "otpsgml_layout", "contents": "otpsgml_layout" },
{ "trigger": "eldap", "contents": "eldap" },
{ "trigger": "erl_prim_loader", "contents": "erl_prim_loader" },
{ "trigger": "erlang", "contents": "erlang" },
{ "trigger": "init", "contents": "init" },
{ "trigger": "prim_file", "contents": "prim_file" },
{ "trigger": "prim_inet", "contents": "prim_inet" },
{ "trigger": "prim_zip", "contents": "prim_zip" },
{ "trigger": "zlib", "contents": "zlib" },
{ "trigger": "et", "contents": "et" },
{ "trigger": "eunit", "contents": "eunit" },
{ "trigger": "ball", "contents": "ball" },
{ "trigger": "browser", "contents": "browser" },
{ "trigger": "calc", "contents": "calc" },
{ "trigger": "calc2", "contents": "calc2" },
{ "trigger": "color_demo", "contents": "color_demo" },
{ "trigger": "color_demo2", "contents": "color_demo2" },
{ "trigger": "distrib_draw", "contents": "distrib_draw" },
{ "trigger": "entry_demo", "contents": "entry_demo" },
{ "trigger": "event_test", "contents": "event_test" },
{ "trigger": "file_dialog", "contents": "file_dialog" },
{ "trigger": "focus_demo", "contents": "focus_demo" },
{ "trigger": "frac", "contents": "frac" },
{ "trigger": "line_demo", "contents": "line_demo" },
{ "trigger": "man", "contents": "man" },
{ "trigger": "rubber", "contents": "rubber" },
{ "trigger": "gs", "contents": "gs" },
{ "trigger": "gse", "contents": "gse" },
{ "trigger": "gstk", "contents": "gstk" },
{ "trigger": "tcl2erl", "contents": "tcl2erl" },
{ "trigger": "tool_file_dialog", "contents": "tool_file_dialog" },
{ "trigger": "tool_utils", "contents": "tool_utils" },
{ "trigger": "ic", "contents": "ic" },
{ "trigger": "ftp", "contents": "ftp" },
{ "trigger": "httpc", "contents": "httpc" },
{ "trigger": "httpd", "contents": "httpd" },
{ "trigger": "inets", "contents": "inets" },
{ "trigger": "tftp", "contents": "tftp" },
{ "trigger": "inviso", "contents": "inviso" },
{ "trigger": "uds", "contents": "uds" },
{ "trigger": "application", "contents": "application" },
{ "trigger": "auth", "contents": "auth" },
{ "trigger": "code", "contents": "code" },
{ "trigger": "disk_log", "contents": "disk_log" },
{ "trigger": "dist_ac", "contents": "dist_ac" },
{ "trigger": "dist_util", "contents": "dist_util" },
{ "trigger": "error_handler", "contents": "error_handler" },
{ "trigger": "error_logger", "contents": "error_logger" },
{ "trigger": "erts_debug", "contents": "erts_debug" },
{ "trigger": "file", "contents": "file" },
{ "trigger": "gen_sctp", "contents": "gen_sctp" },
{ "trigger": "gen_tcp", "contents": "gen_tcp" },
{ "trigger": "gen_udp", "contents": "gen_udp" },
{ "trigger": "global", "contents": "global" },
{ "trigger": "group", "contents": "group" },
{ "trigger": "heart", "contents": "heart" },
{ "trigger": "inet", "contents": "inet" },
{ "trigger": "kernel", "contents": "kernel" },
{ "trigger": "net", "contents": "net" },
{ "trigger": "net_adm", "contents": "net_adm" },
{ "trigger": "net_kernel", "contents": "net_kernel" },
{ "trigger": "os", "contents": "os" },
{ "trigger": "packages", "contents": "packages" },
{ "trigger": "pg2", "contents": "pg2" },
{ "trigger": "ram_file", "contents": "ram_file" },
{ "trigger": "rpc", "contents": "rpc" },
{ "trigger": "seq_trace", "contents": "seq_trace" },
{ "trigger": "standard_error", "contents": "standard_error" },
{ "trigger": "user", "contents": "user" },
{ "trigger": "user_drv", "contents": "user_drv" },
{ "trigger": "user_sup", "contents": "user_sup" },
{ "trigger": "wrap_log_reader", "contents": "wrap_log_reader" },
{ "trigger": "megaco", "contents": "megaco" },
{ "trigger": "mnesia", "contents": "mnesia" },
{ "trigger": "crashdump_viewer", "contents": "crashdump_viewer" },
{ "trigger": "crashdump_viewer_html", "contents": "crashdump_viewer_html" },
{ "trigger": "etop", "contents": "etop" },
{ "trigger": "observer", "contents": "observer" },
{ "trigger": "ttb", "contents": "ttb" },
{ "trigger": "odbc", "contents": "odbc" },
{ "trigger": "any", "contents": "any" },
{ "trigger": "cdr_decode", "contents": "cdr_decode" },
{ "trigger": "cdr_encode", "contents": "cdr_encode" },
{ "trigger": "cdrlib", "contents": "cdrlib" },
{ "trigger": "corba", "contents": "corba" },
{ "trigger": "fixed", "contents": "fixed" },
{ "trigger": "iop_ior", "contents": "iop_ior" },
{ "trigger": "orber", "contents": "orber" },
{ "trigger": "cpu_sup", "contents": "cpu_sup" },
{ "trigger": "disksup", "contents": "disksup" },
{ "trigger": "memsup", "contents": "memsup" },
{ "trigger": "nteventlog", "contents": "nteventlog" },
{ "trigger": "os_mon", "contents": "os_mon" },
{ "trigger": "otp_mib", "contents": "otp_mib" },
{ "trigger": "leex", "contents": "leex" },
{ "trigger": "yecc", "contents": "yecc" },
{ "trigger": "yeccparser", "contents": "yeccparser" },
{ "trigger": "yeccscan", "contents": "yeccscan" },
{ "trigger": "egd", "contents": "egd" },
{ "trigger": "percept", "contents": "percept" },
{ "trigger": "pman", "contents": "pman" },
{ "trigger": "pubkey_cert", "contents": "pubkey_cert" },
{ "trigger": "pubkey_cert_records", "contents": "pubkey_cert_records" },
{ "trigger": "pubkey_pbe", "contents": "pubkey_pbe" },
{ "trigger": "pubkey_pem", "contents": "pubkey_pem" },
{ "trigger": "pubkey_ssh", "contents": "pubkey_ssh" },
{ "trigger": "public_key", "contents": "public_key" },
{ "trigger": "reltool", "contents": "reltool" },
{ "trigger": "dbg", "contents": "dbg" },
{ "trigger": "dyntrace", "contents": "dyntrace" },
{ "trigger": "runtime_tools", "contents": "runtime_tools" },
{ "trigger": "target_system", "contents": "target_system" },
{ "trigger": "alarm_handler", "contents": "alarm_handler" },
{ "trigger": "erlsrv", "contents": "erlsrv" },
{ "trigger": "format_lib_supp", "contents": "format_lib_supp" },
{ "trigger": "misc_supp", "contents": "misc_supp" },
{ "trigger": "overload", "contents": "overload" },
{ "trigger": "rb", "contents": "rb" },
{ "trigger": "rb_format_supp", "contents": "rb_format_supp" },
{ "trigger": "release_handler", "contents": "release_handler" },
{ "trigger": "sasl", "contents": "sasl" },
{ "trigger": "sasl_report", "contents": "sasl_report" },
{ "trigger": "si", "contents": "si" },
{ "trigger": "systools", "contents": "systools" },
{ "trigger": "snmpa", "contents": "snmpa" },
{ "trigger": "snmp", "contents": "snmp" },
{ "trigger": "snmpc", "contents": "snmpc" },
{ "trigger": "snmpm", "contents": "snmpm" },
{ "trigger": "ssh", "contents": "ssh" },
{ "trigger": "client_server", "contents": "client_server" },
{ "trigger": "inet_tls_dist", "contents": "inet_tls_dist" },
{ "trigger": "ssl", "contents": "ssl" },
{ "trigger": "array", "contents": "array" },
{ "trigger": "base64", "contents": "base64" },
{ "trigger": "beam_lib", "contents": "beam_lib" },
{ "trigger": "binary", "contents": "binary" },
{ "trigger": "c", "contents": "c" },
{ "trigger": "calendar", "contents": "calendar" },
{ "trigger": "dets", "contents": "dets" },
{ "trigger": "dets_server", "contents": "dets_server" },
{ "trigger": "dets_sup", "contents": "dets_sup" },
{ "trigger": "dets_utils", "contents": "dets_utils" },
{ "trigger": "dets_v8", "contents": "dets_v8" },
{ "trigger": "dets_v9", "contents": "dets_v9" },
{ "trigger": "dict", "contents": "dict" },
{ "trigger": "digraph", "contents": "digraph" },
{ "trigger": "digraph_utils", "contents": "digraph_utils" },
{ "trigger": "edlin", "contents": "edlin" },
{ "trigger": "edlin_expand", "contents": "edlin_expand" },
{ "trigger": "epp", "contents": "epp" },
{ "trigger": "escript", "contents": "escript" },
{ "trigger": "ets", "contents": "ets" },
{ "trigger": "filelib", "contents": "filelib" },
{ "trigger": "filename", "contents": "filename" },
{ "trigger": "gb_sets", "contents": "gb_sets" },
{ "trigger": "gb_trees", "contents": "gb_trees" },
{ "trigger": "gen", "contents": "gen" },
{ "trigger": "gen_event", "contents": "gen_event" },
{ "trigger": "gen_fsm", "contents": "gen_fsm" },
{ "trigger": "gen_server", "contents": "gen_server" },
{ "trigger": "io", "contents": "io" },
{ "trigger": "io_lib", "contents": "io_lib" },
{ "trigger": "lib", "contents": "lib" },
{ "trigger": "lists", "contents": "lists" },
{ "trigger": "math", "contents": "math" },
{ "trigger": "ms_transform", "contents": "ms_transform" },
{ "trigger": "orddict", "contents": "orddict" },
{ "trigger": "ordsets", "contents": "ordsets" },
{ "trigger": "otp_internal", "contents": "otp_internal" },
{ "trigger": "pg", "contents": "pg" },
{ "trigger": "pool", "contents": "pool" },
{ "trigger": "proc_lib", "contents": "proc_lib" },
{ "trigger": "proplists", "contents": "proplists" },
{ "trigger": "qlc", "contents": "qlc" },
{ "trigger": "qlc_pt", "contents": "qlc_pt" },
{ "trigger": "queue", "contents": "queue" },
{ "trigger": "random", "contents": "random" },
{ "trigger": "re", "contents": "re" },
{ "trigger": "sets", "contents": "sets" },
{ "trigger": "shell", "contents": "shell" },
{ "trigger": "shell_default", "contents": "shell_default" },
{ "trigger": "slave", "contents": "slave" },
{ "trigger": "sofs", "contents": "sofs" },
{ "trigger": "string", "contents": "string" },
{ "trigger": "supervisor", "contents": "supervisor" },
{ "trigger": "sys", "contents": "sys" },
{ "trigger": "timer", "contents": "timer" },
{ "trigger": "unicode", "contents": "unicode" },
{ "trigger": "win32reg", "contents": "win32reg" },
{ "trigger": "zip", "contents": "zip" },
{ "trigger": "igor", "contents": "igor" },
{ "trigger": "prettypr", "contents": "prettypr" },
{ "trigger": "erl2html2", "contents": "erl2html2" },
{ "trigger": "test_server", "contents": "test_server" },
{ "trigger": "vxworks_client", "contents": "vxworks_client" },
{ "trigger": "canvasbutton", "contents": "canvasbutton" },
{ "trigger": "toolbar", "contents": "toolbar" },
{ "trigger": "cover", "contents": "cover" },
{ "trigger": "cprof", "contents": "cprof" },
{ "trigger": "eprof", "contents": "eprof" },
{ "trigger": "fprof", "contents": "fprof" },
{ "trigger": "instrument", "contents": "instrument" },
{ "trigger": "lcnt", "contents": "lcnt" },
{ "trigger": "make", "contents": "make" },
{ "trigger": "tags", "contents": "tags" },
{ "trigger": "xref", "contents": "xref" },
{ "trigger": "tv", "contents": "tv" },
{ "trigger": "typer", "contents": "typer" },
{ "trigger": "webtool", "contents": "webtool" },
{ "trigger": "wx", "contents": "wx" },
{ "trigger": "xmerl", "contents": "xmerl" },
{ "trigger": "abs/1", "contents": "abs(${1:Number}) $2" },
{ "trigger": "apply/2", "contents": "apply(${1:Fun}, ${2:Args}) $3" },
{ "trigger": "apply/3", "contents": "apply(${1:Module}, ${2:Function}, ${3:Args}) $4" },
{ "trigger": "atom_to_binary/2", "contents": "atom_to_binary(${1:Atom}, ${2:Encoding}) $3" },
{ "trigger": "atom_to_list/1", "contents": "atom_to_list(${1:Atom}) $2" },
{ "trigger": "binary_part/2", "contents": "binary_part(${1:Subject}, ${2:PosLen}) $3" },
{ "trigger": "binary_part/3", "contents": "binary_part(${1:Subject}, ${2:Start}, ${3:Length}) $4" },
{ "trigger": "binary_to_atom/2", "contents": "binary_to_atom(${1:Binary}, ${2:Encoding}) $3" },
{ "trigger": "binary_to_existing_atom/2", "contents": "binary_to_existing_atom(${1:Binary}, ${2:Encoding}) $3" },
{ "trigger": "binary_to_list/1", "contents": "binary_to_list(${1:Binary}) $2" },
{ "trigger": "binary_to_list/3", "contents": "binary_to_list(${1:Binary}, ${2:Start}, ${3:Stop}) $4" },
{ "trigger": "bitstring_to_list/1", "contents": "bitstring_to_list(${1:Bitstring}) $2" },
{ "trigger": "binary_to_term/2", "contents": "binary_to_term(${1:Binary}, ${2:Opts}) $3" },
{ "trigger": "bit_size/1", "contents": "bit_size(${1:Bitstring}) $2" },
{ "trigger": "byte_size/1", "contents": "byte_size(${1:Bitstring}) $2" },
{ "trigger": "check_old_code/1", "contents": "check_old_code(${1:Module}) $2" },
{ "trigger": "check_process_code/2", "contents": "check_process_code(${1:Pid}, ${2:Module}) $3" },
{ "trigger": "date/0", "contents": "date() $1" },
{ "trigger": "delete_module/1", "contents": "delete_module(${1:Module}) $2" },
{ "trigger": "demonitor/1", "contents": "demonitor(${1:MonitorRef}) $2" },
{ "trigger": "demonitor/2", "contents": "demonitor(${1:MonitorRef}, ${2:OptionList}) $3" },
{ "trigger": "disconnect_node/1", "contents": "disconnect_node(${1:Node}) $2" },
{ "trigger": "element/2", "contents": "element(${1:N}, ${2:Tuple}) $3" },
{ "trigger": "erase/0", "contents": "erase() $1" },
{ "trigger": "erase/1", "contents": "erase(${1:Key}) $2" },
{ "trigger": "error/1", "contents": "error(${1:Reason}) $2" },
{ "trigger": "error/2", "contents": "error(${1:Reason}, ${2:Args}) $3" },
{ "trigger": "exit/1", "contents": "exit(${1:Reason}) $2" },
{ "trigger": "exit/2", "contents": "exit(${1:Reason}, ${2:Args}) $3" },
{ "trigger": "float/1", "contents": "float(${1:Number}) $2" },
{ "trigger": "float_to_list/1", "contents": "float_to_list(${1:Float}) $2" },
{ "trigger": "garbage_collect/0", "contents": "garbage_collect() $1" },
{ "trigger": "garbage_collect/1", "contents": "garbage_collect(${1:Pid}) $2" },
{ "trigger": "get/0", "contents": "get() $1" },
{ "trigger": "get/1", "contents": "get(${1:Key}) $2" },
{ "trigger": "get_keys/1", "contents": "get_keys(${1:Val}) $2" },
{ "trigger": "group_leader/0", "contents": "group_leader() $1" },
{ "trigger": "group_leader/2", "contents": "group_leader(${1:GroupLeader}, ${2:Pid}) $3" },
{ "trigger": "halt/0", "contents": "halt() $1" },
{ "trigger": "halt/1", "contents": "halt(${1:Status}) $2" },
{ "trigger": "halt/2", "contents": "halt(${1:Status}, ${2:Options}) $3" },
{ "trigger": "hd/1", "contents": "hd(${1:List}) $2" },
{ "trigger": "integer_to_list/1", "contents": "integer_to_list(${1:Integer}) $2" },
{ "trigger": "integer_to_list/2", "contents": "integer_to_list(${1:Integer}, ${2:Base}) $3" },
{ "trigger": "iolist_to_binary/1", "contents": "iolist_to_binary(${1:IoListOrBinary}) $2" },
{ "trigger": "iolist_size/1", "contents": "iolist_size(${1:Item}) $2" },
{ "trigger": "is_alive/0", "contents": "is_alive() $1" },
{ "trigger": "is_atom/1", "contents": "is_atom(${1:Term}) $2" },
{ "trigger": "is_binary/1", "contents": "is_binary(${1:Term}) $2" },
{ "trigger": "is_bitstring/1", "contents": "is_bitstring(${1:Term}) $2" },
{ "trigger": "is_boolean/1", "contents": "is_boolean(${1:Term}) $2" },
{ "trigger": "is_float/1", "contents": "is_float(${1:Term}) $2" },
{ "trigger": "is_function/1", "contents": "is_function(${1:Term}) $2" },
{ "trigger": "is_function/2", "contents": "is_function(${1:Term}, ${2:Arity}) $3" },
{ "trigger": "is_integer/1", "contents": "is_integer(${1:Term}) $2" },
{ "trigger": "is_list/1", "contents": "is_list(${1:Term}) $2" },
{ "trigger": "is_number/1", "contents": "is_number(${1:Term}) $2" },
{ "trigger": "is_pid/1", "contents": "is_pid(${1:Term}) $2" },
{ "trigger": "is_port/1", "contents": "is_port(${1:Term}) $2" },
{ "trigger": "is_process_alive/1", "contents": "is_process_alive(${1:Pid}) $2" },
{ "trigger": "is_record/2", "contents": "is_record(${1:Term}, ${2:RecordTag}) $3" },
{ "trigger": "is_record/3", "contents": "is_record(${1:Term}, ${2:RecordTag}, ${3:Size}) $4" },
{ "trigger": "is_reference/1", "contents": "is_reference(${1:Term}) $2" },
{ "trigger": "is_tuple/1", "contents": "is_tuple(${1:Term}) $2" },
{ "trigger": "length/1", "contents": "length(${1:List}) $2" },
{ "trigger": "link/1", "contents": "link(${1:Pid}) $2" },
{ "trigger": "list_to_atom/1", "contents": "list_to_atom(${1:String}) $2" },
{ "trigger": "list_to_binary/1", "contents": "list_to_binary(${1:IoList}) $2" },
{ "trigger": "list_to_bitstring/1", "contents": "list_to_bitstring(${1:BitstringList}) $2" },
{ "trigger": "list_to_existing_atom/1", "contents": "list_to_existing_atom(${1:String}) $2" },
{ "trigger": "list_to_float/1", "contents": "list_to_float(${1:String}) $2" },
{ "trigger": "list_to_integer/1", "contents": "list_to_integer(${1:String}) $2" },
{ "trigger": "list_to_integer/2", "contents": "list_to_integer(${1:String}, ${2:Base}) $3" },
{ "trigger": "list_to_pid/1", "contents": "list_to_pid(${1:String}) $2" },
{ "trigger": "list_to_tuple/1", "contents": "list_to_tuple(${1:List}) $2" },
{ "trigger": "load_module/2", "contents": "load_module(${1:Module}, ${2:Binary}) $3" },
{ "trigger": "make_ref/0", "contents": "make_ref() $1" },
{ "trigger": "max/2", "contents": "max(${1:Term1}, ${2:Term2}) $3" },
{ "trigger": "min/2", "contents": "min(${1:Term1}, ${2:Term2}) $3" },
{ "trigger": "module_loaded/1", "contents": "module_loaded(${1:Module}) $2" },
{ "trigger": "monitor/2", "contents": "monitor(${1:Type}, ${2:Item}) $3" },
{ "trigger": "monitor_node/2", "contents": "monitor_node(${1:Node}, ${2:Flag}) $3" },
{ "trigger": "node/0", "contents": "node() $1" },
{ "trigger": "node/1", "contents": "node(${1:Arg}) $2" },
{ "trigger": "nodes/0", "contents": "nodes() $1" },
{ "trigger": "nodes/1", "contents": "nodes(${1:Arg}) $2" },
{ "trigger": "now/0", "contents": "now() $1" },
{ "trigger": "open_port/2", "contents": "open_port(${1:PortName}, ${2:PortSettings}) $3" },
{ "trigger": "pid_to_list/1", "contents": "pid_to_list(${1:Pid}) $2" },
{ "trigger": "port_close/1", "contents": "port_close(${1:Port}) $2" },
{ "trigger": "port_command/2", "contents": "port_command(${1:Port}, ${2:Data}) $3" },
{ "trigger": "port_command/3", "contents": "port_command(${1:Port}, ${2:Data}, ${3:OptionList}) $4" },
{ "trigger": "port_connect/2", "contents": "port_connect(${1:Port}, ${2:Pid}) $3" },
{ "trigger": "port_control/3", "contents": "port_control(${1:Port}, ${2:Operation}, ${3:Data}) $4" },
{ "trigger": "pre_loaded/0", "contents": "pre_loaded() $1" },
{ "trigger": "process_flag/2", "contents": "process_flag(${1:Flag}, ${2:Value}) $3" },
{ "trigger": "process_flag/3", "contents": "process_flag(${1:Pid}, ${2:Flag}, ${3:Value}) $4" },
{ "trigger": "process_info/1", "contents": "process_info(${1:Pid}) $2" },
{ "trigger": "process_info/2", "contents": "process_info(${1:Pid}, ${2:ItemSpec}) $3" },
{ "trigger": "processes/0", "contents": "processes() $1" },
{ "trigger": "purge_module/1", "contents": "purge_module(${1:Module}) $2" },
{ "trigger": "put/2", "contents": "put(${1:Key}, ${2:Val}) $3" },
{ "trigger": "register/2", "contents": "put(${1:RegName}, ${2:PidOrPort}) $3" },
{ "trigger": "registered/0", "contents": "registered() $1" },
{ "trigger": "round/1", "contents": "round(${1:Number}) $2" },
{ "trigger": "self/0", "contents": "self() $1" },
{ "trigger": "setelement/3", "contents": "setelement(${1:Index}, ${2:Tuple1}, ${3:Value}) $4" },
{ "trigger": "size/1", "contents": "size(${1:Item}) $2" },
{ "trigger": "spawn/1", "contents": "spawn(${1:Fun}) $2" },
{ "trigger": "spawn/2", "contents": "spawn(${1:Node}, ${2:Fun}) $3" },
{ "trigger": "spawn/3", "contents": "spawn(${1:Module}, ${2:Function}) $3, ${3:Args}) $4" },
{ "trigger": "spawn/4", "contents": "spawn(${1:Node}, ${2:Module}) $3, ${3:Function}, ${4:Args}) $5" },
{ "trigger": "spawn_link/1", "contents": "spawn_link(${1:Fun}) $2" },
{ "trigger": "spawn_link/2", "contents": "spawn_link(${1:Node}, ${2:Fun}) $3" },
{ "trigger": "spawn_link/3", "contents": "spawn_link(${1:Module}, ${2:Function}, ${3:Args}) $4" },
{ "trigger": "spawn_link/4", "contents": "spawn_link(${1:Node}, ${2:Module}) $3, ${3:Function}, ${4:Args}) $5" },
{ "trigger": "spawn_monitor/1", "contents": "spawn_monitor(${1:Fun}) $2" },
{ "trigger": "spawn_monitor/3", "contents": "spawn_monitor(${1:Module}, ${2:Function}, ${3:Args}) $4" },
{ "trigger": "spawn_opt/2", "contents": "spawn_opt(${1:Fun}, ${2:Options}) $3" },
{ "trigger": "spawn_opt/3", "contents": "spawn_opt(${1:Node}, ${2:Fun}, ${3:Options}) $4" },
{ "trigger": "spawn_opt/4", "contents": "spawn_opt(${1:Module}, ${2:Function}, ${3:Args}, ${4:Options}) $5" },
{ "trigger": "spawn_opt/5", "contents": "spawn_opt(${1:Node}, ${2:Module}, ${3:Function}, ${4:Args}, ${5:Options}) $6" },
{ "trigger": "split_binary/2", "contents": "split_binary(${1:Bin}, ${2:Pos}) $3" },
{ "trigger": "statistics/1", "contents": "statistics(${1:Type}) $2" },
{ "trigger": "term_to_binary/1", "contents": "term_to_binary(${1:Term}) $2" },
{ "trigger": "term_to_binary/2", "contents": "term_to_binary(${1:Term}, ${2:Options}) $3" },
{ "trigger": "throw/1", "contents": "throw(${1:Any}) $2" },
{ "trigger": "time/0", "contents": "time() $1" },
{ "trigger": "tl/1", "contents": "tl(${1:List1}) $2" },
{ "trigger": "trunc/1", "contents": "trunc(${1:Number}) $2" },
{ "trigger": "tuple_size/1", "contents": "tuple_size(${1:Tuple}) $2" },
{ "trigger": "tuple_to_list/1", "contents": "tuple_to_list(${1:Tuple}) $2" },
{ "trigger": "unlink/1", "contents": "unlink(${1:Id}) $2" },
{ "trigger": "unregister/1", "contents": "unregister(${1:RegName}) $2" },
{ "trigger": "whereis/1", "contents": "whereis(${1:RegName}) $2" }
]}
